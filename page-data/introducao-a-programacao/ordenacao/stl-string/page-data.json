{"componentChunkName":"component---src-pages-introducao-a-programacao-ordenacao-markdown-remark-frontmatter-slug-tsx","path":"/introducao-a-programacao/ordenacao/stl-string/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"04 - STL: String","description":"descricao","author":"Rene Pegoraro, Pedro Henrique Paiola, Wilson M Yonezawa"},"html":"<p>Informações obtidas dos sites:\n- <a href=\"https://web.eecs.umich.edu/~sugih/courses/eecs281/string.html\">https://web.eecs.umich.edu/~sugih/courses/eecs281/string.html</a>\nDesenvolvido por: Dr. Mark J. Sebern e\n- <a href=\"http://www.cplusplus.com/reference/string/string/\">http://www.cplusplus.com/reference/string/string/</a></p>\n<h2>ANSI String Class</h2>\n<ul>\n<li>Classe que facilita a utilização de cadeias de caracteres em cpp</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Não esqueça</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>Iniciação</h3>\n<ul>\n<li>Iniciando uma string vazia:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Com uma expressão:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str2 <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">;</span>\nstring str3 <span class=\"token operator\">=</span> str1 <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">;</span>\nstring <span class=\"token function\">str4</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alternativa</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Com uma cadeia literal:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str4 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello there\"</span><span class=\"token punctuation\">;</span>\nstring <span class=\"token function\">str5</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Goodbye\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Não é permitido:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str6 <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// incorreto</span>\nstring <span class=\"token function\">str7</span><span class=\"token punctuation\">(</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// incorreto</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Com caracter constante:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string <span class=\"token function\">str7</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token char\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// preenchida</span>\n<span class=\"token comment\">// com 10 caracteres 'A'.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Com substring</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str8 <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKL\"</span><span class=\"token punctuation\">;</span>\nstring <span class=\"token function\">str9</span><span class=\"token punctuation\">(</span>str8<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// inicia str9</span>\n<span class=\"token comment\">// com \"CDEFG</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Comprimento</p>\n<ul>\n<li>Funções que retornam o comprimento de uma string</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">size_type <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\nsize_type <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\nstring<span class=\"token double-colon punctuation\">::</span>size_type len<span class=\"token punctuation\">;</span> <span class=\"token comment\">// int também funciona</span>\nlen <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// len == 5</span>\nlen <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// len == 5</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Convertendo para C-style string</h3>\n<ul>\n<li>Retorna o ponteiro para o primeiro caracter do vetor do tipo char da cadeia de caracteres terminada por nulo</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> <span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str_cpp<span class=\"token operator\">=</span>“abcd”<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> str_c<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>str_c<span class=\"token punctuation\">,</span> str_cpp<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Insere uma String em Outra</h3>\n<ul>\n<li>Insere uma string em outra em uma posição</li>\n</ul>\n<p>determinada</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string<span class=\"token operator\">&amp;</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>size_type pos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str11 <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefghi\"</span><span class=\"token punctuation\">;</span>\nstring str12 <span class=\"token operator\">=</span> <span class=\"token string\">\"0123\"</span><span class=\"token punctuation\">;</span>\nstr11<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> str12<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"abc0123defghi\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Apaga um Pedaço de uma String</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string<span class=\"token operator\">&amp;</span> <span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>size_type pos<span class=\"token punctuation\">,</span> size_type n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str13 <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefghi\"</span><span class=\"token punctuation\">;</span>\nstr12<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"abcdei\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Substitui uma Substring por Outra</h3>\n<ul>\n<li>Apaga uma substring e insere outra no lugar</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string<span class=\"token operator\">&amp;</span> <span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>size_type pos<span class=\"token punctuation\">,</span> size_type n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str14 <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefghi\"</span><span class=\"token punctuation\">;</span>\nstring str15 <span class=\"token operator\">=</span> <span class=\"token string\">\"XYZ\"</span><span class=\"token punctuation\">;</span>\nstr14<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> str15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"abcdXYZghi\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3>Procura a Ocorrência de uma String em Outra</h3>\n<ul>\n<li>Procura a ocorrência de uma String em outra String iniciando na posição pos</li>\n<li>Retorna a primeira ocorrência</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">size_type <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> size_type pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>– Retorna a última ocorrência</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">size_type <span class=\"token function\">rfind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> size_type pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Se a string for encontrada, retorna o índice do início da ocorrência; senão, retorna o valor string::npos.</li>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str16 <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefghi\"</span><span class=\"token punctuation\">;</span>\nstring str17 <span class=\"token operator\">=</span> <span class=\"token string\">\"def\"</span><span class=\"token punctuation\">;</span>\nstring<span class=\"token double-colon punctuation\">::</span>size_type pos <span class=\"token operator\">=</span> str16<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>str17<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// retorna 3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3>Procura a Ocorrência de um dos Caracteres em uma String</h3>\n<ul>\n<li>Procura a ocorrência de um dos caracteres na string iniciando na posição pos</li>\n<li>Retorna a posição da primeira ocorrência</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">size_t <span class=\"token function\">find_first_of</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> size_t pos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Retorna a última ocorrência</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">size_t <span class=\"token function\">find_last_of</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> size_t pos <span class=\"token operator\">=</span> npos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Se nenhum caractere for encontrado, retorna o índice da ocorrência;</li>\n</ul>\n<p>senão, retorna o valor string::npos.</p>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Um texto vai aqui.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstd<span class=\"token double-colon punctuation\">::</span>size_t found <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">find_first_of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aeiou\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// retorna 4</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Retorna uma Substring</h3>\n<ul>\n<li>Retorna uma Substring com n caracteres a partir da</li>\n</ul>\n<p>posição pos</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>size_type pos<span class=\"token punctuation\">,</span> size_type n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str18 <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefghi\"</span>\nstring str19 <span class=\"token operator\">=</span> str18<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"gh\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Operador = (Atribuição)</h3>\n<ul>\n<li>Atribui uma string a outra</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string string_one <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\nstring string_two<span class=\"token punctuation\">;</span>\nstring_two <span class=\"token operator\">=</span> string_one<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Com cadeias literais</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string string_three<span class=\"token punctuation\">;</span>\nstring_three <span class=\"token operator\">=</span> <span class=\"token string\">\"Goodbye\"</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Com um único caracter</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string string_four<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span>\nstring_four <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">;</span>\nstring_four <span class=\"token operator\">=</span> <span class=\"token char\">'Z'</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Operador + (Concatenação)</h3>\n<ul>\n<li>Concatena duas Strings</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello \"</span><span class=\"token punctuation\">;</span>\nstring str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"there\"</span><span class=\"token punctuation\">;</span>\nstring str3 <span class=\"token operator\">=</span> str1 <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hello there\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Uma string com uma constante</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello \"</span><span class=\"token punctuation\">;</span>\nstring str4 <span class=\"token operator\">=</span> str1 <span class=\"token operator\">+</span> <span class=\"token string\">\"there\"</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Uma string com um caracter único</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str5 <span class=\"token operator\">=</span> <span class=\"token string\">\"The End\"</span><span class=\"token punctuation\">;</span>\nstring str6 <span class=\"token operator\">=</span> str5 <span class=\"token operator\">+</span> <span class=\"token char\">'!'</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Operador += (Concatena e Atribui)</h3>\n<ul>\n<li>Concatena duas Strings</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello \"</span><span class=\"token punctuation\">;</span>\nstring str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"there\"</span><span class=\"token punctuation\">;</span>\nstr1 <span class=\"token operator\">+=</span> str2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hello there\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Uma string com uma constante</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello \"</span><span class=\"token punctuation\">;</span>\nstr1 <span class=\"token operator\">+=</span> <span class=\"token string\">\"there\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Hello there\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Uma string com um caractere único</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str5 <span class=\"token operator\">=</span> <span class=\"token string\">\"The End\"</span><span class=\"token punctuation\">;</span>\nstr5 <span class=\"token operator\">+=</span> <span class=\"token char\">'!'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"The End!\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Operadores de Comparação</h3>\n<h4>==, !=, &#x3C;, >, &#x3C;=, >=</h4>\n<ul>\n<li>Compara duas strings</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> “Joao”<span class=\"token punctuation\">;</span>\nstring str2 <span class=\"token operator\">=</span> “Maria”<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>st1 <span class=\"token operator\">></span> str2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Uma string e uma cadeia literal</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> “Joao”<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">!=</span> “Pedro”<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3>Operador [ ]</h3>\n<h4>Caractere Indicado por Índice</h4>\n<ul>\n<li>Faz acesso ao caracter indicado pelo índice</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str10 <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefghi\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> str10<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'd'</span>\nstr10<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'X'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"abcdeXghi\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3>Operador &#x3C;&#x3C; e >></h3>\n<h4>Entrada e Saída no Modo Texto</h4>\n<ul>\n<li>Escreve a string para o output stream</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello there\"</span><span class=\"token punctuation\">;</span>\ncout <span class=\"token operator\">&lt;&lt;</span> str1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>Lê uma string a partir do input stream</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\">string str1<span class=\"token punctuation\">;</span>\ncin <span class=\"token operator\">>></span> str1<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>"}},"pageContext":{"id":"2c4afec0-9447-5385-aac7-83bf7818c344","frontmatter__slug":"stl-string","__params":{"frontmatter__slug":"stl-string"}}},"staticQueryHashes":["3159585216"],"slicesMap":{}}