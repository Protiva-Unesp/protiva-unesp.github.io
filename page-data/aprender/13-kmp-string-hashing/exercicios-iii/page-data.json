{"componentChunkName":"component---src-pages-aprender-13-kmp-string-hashing-markdown-remark-frontmatter-slug-tsx","path":"/aprender/13-kmp-string-hashing/exercicios-iii/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Exercícios III","description":"descricao","author":null},"html":"<h2>Resolução dos Exercícios</h2>\n<h2>Exercícios: C e E</h2>\n<h3>C - Grapevine</h3>\n<p>img1 - img5</p>\n<p>• Solução: O(q<em>n</em>log^2(min(n,m)))</p>\n<pre><code class=\"language-C++\">while (cin >> n >> m){\n    if (n == 0 &#x26;&#x26; m == 0) break;\n    v = vector&#x3C;vector&#x3C;ll>>(n, vector&#x3C;ll>(m));\n    for (int i = 0; i &#x3C; n; i++)\n        for (int j = 0; j &#x3C; m; j++)\n            cin >> v[i][j];\n        ll q,l,u;\n        cin >> q;\n        while (q--){\n            cin >> l >> u;\n            cout &#x3C;&#x3C; busca_binaria(l, u) &#x3C;&#x3C; \"\\n\";\n        }\n    cout &#x3C;&#x3C; \"-\\n\";\n}\n\nll busca_binaria(ll &#x26;l, ll &#x26;u)\n{\n    ll ini = 1, fim = min(n, m), ans =0;\n    while (ini &#x3C;= fim){\n        ll mid = (ini + fim) / 2;\n        bool possivel = false;\n        for (int i = 0; i &#x3C; n; i++){\n            //Encontra a posicao j na linha i em que v[i][j] é >= l\n            int j = lower_bound(v[i].begin(), v[i].end(), l) - v[i].begin();\n            //Verifica se para dado tamanho de quadrado existe essa posicao na matriz\n            if (verifica(i + mid - 1, (j + mid - 1))){\n                possivel = 1;\n                if (v[i][j] > u) possivel = 0;\n                else if (v[i][j] >= l &#x26;&#x26; v[i][j] &#x3C;= u)\n                    if (v[i + mid - 1][j + mid - 1] > u)\n                    possivel = 0;\n                else\n                possivel = 0;\n                if (possivel) break;\n            }\n        }\n        if (possivel){\n            ans = mid;\n            ini = mid + 1;\n        } else fim = mid - 1;\n    }\n    return ans;\n}\n</code></pre>\n<p>• Solução: O(q<em>n</em>log(min(n,m)))</p>\n<pre><code class=\"language-C++\">ll u = max(n, m);\nvector&#x3C;vector&#x3C;ll>> v (n, vector&#x3C;ll> (m));\nvector&#x3C;vector&#x3C;ll>> diag (2*u + 1);\nfor(int i = 0; i &#x3C; n; i++){\n    for(int j = 0; j &#x3C; m; j++){\n    cin >> v[i][j];\n    diag[u + (i - j)].push_back(v[i][j]);\n    }\n}\nwhile(q--){\n    cin >> a >> b;\n    tam = 0;\n    if(a > b)swap(a, b);\n    for(int i = 0; i &#x3C; n; i++){\n        ll indd = lower_bound(v[i].begin(), v[i].end(), a) - v[i].begin();\n        ll indu = upper_bound(v[i].begin(), v[i].end(), b) - v[i].begin();\n        xma = indu - indd;\n        indu--;\n        if(indu >= 0)\n            yma = upper_bound(diag[u + (i - indu)].begin(), diag[u + (i - indu)].end(), b)\n            lower_bound(diag[u + (i - indu)].begin(), diag[u + (i - indu)].end(), a);\n        else yma = 0;\n        tam = max(tam, min(xma, yma));\n    }\n    cout &#x3C;&#x3C; tam &#x3C;&#x3C; \"\\n\";\n}\n\nsort(begin(v), end(v));\nll tempo = abs(a-b);\nvector&#x3C;ll> res;\nll cont = 0;\nll tempof = tempo;\nif(a &#x3C; b) tempof += a-1;\nelse tempof += n-a;\nfor(int i = m-1; i >= 0; i--){\n    if(cont == tempo-1)break;\n    if(v[i] + cont + 1 &#x3C;= tempof){\n        cont++;\n    }\n}\ncout &#x3C;&#x3C; cont &#x3C;&#x3C; \"\\n\";\n</code></pre>"}},"pageContext":{"id":"22c1b16d-0096-56df-a3ea-42abaa37ced4","frontmatter__slug":"exercicios-iii","__params":{"frontmatter__slug":"exercicios-iii"}}},"staticQueryHashes":["3159585216"],"slicesMap":{}}