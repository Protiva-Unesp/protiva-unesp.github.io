{"componentChunkName":"component---src-pages-aprender-02-stl-markdown-remark-frontmatter-slug-tsx","path":"/aprender/02-stl/stl-string/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"04 - STL: String","description":"descricao","author":"Rene Pegoraro, Pedro Henrique Paiola, Wilson M Yonezawa"},"html":"<p>Informações obtidas dos sites:\n- <a href=\"https://web.eecs.umich.edu/~sugih/courses/eecs281/string.html\">https://web.eecs.umich.edu/~sugih/courses/eecs281/string.html</a>\nDesenvolvido por: Dr. Mark J. Sebern e\n- <a href=\"http://www.cplusplus.com/reference/string/string/\">http://www.cplusplus.com/reference/string/string/</a></p>\n<h2>ANSI String Class</h2>\n<ul>\n<li>Classe que facilita a utilização de cadeias de caracteres em C++</li>\n</ul>\n<pre><code class=\"language-C++\">#include &#x3C;string>\n</code></pre>\n<ul>\n<li>Não esqueça</li>\n</ul>\n<pre><code class=\"language-C++\">using namespace std;\n</code></pre>\n<h3>Iniciação</h3>\n<ul>\n<li>Iniciando uma string vazia:</li>\n</ul>\n<pre><code class=\"language-C++\">string str1;\n</code></pre>\n<ul>\n<li>Com uma expressão:</li>\n</ul>\n<pre><code class=\"language-C++\">string str2 = str1;\nstring str3 = str1 + str2;\nstring str4(str2); // alternativa\n</code></pre>\n<ul>\n<li>Com uma cadeia literal:</li>\n</ul>\n<pre><code class=\"language-C++\">string str4 = \"Hello there\";\nstring str5(\"Goodbye\");\n</code></pre>\n<ul>\n<li>Não é permitido:</li>\n</ul>\n<pre><code class=\"language-C++\">string str6 = 'A'; // incorreto\nstring str7('A'); // incorreto\n</code></pre>\n<ul>\n<li>Com caracter constante:</li>\n</ul>\n<pre><code class=\"language-C++\">string str7(10,'A'); // preenchida\n// com 10 caracteres 'A'.\n</code></pre>\n<ul>\n<li>Com substring</li>\n</ul>\n<pre><code class=\"language-C++\">string str8 = \"ABCDEFGHIJKL\";\nstring str9(str8,2,5); // inicia str9\n// com \"CDEFG\n</code></pre>\n<p>Comprimento</p>\n<ul>\n<li>Funções que retornam o comprimento de uma string</li>\n</ul>\n<pre><code class=\"language-C++\">size_type length() const;\nsize_type size() const;\n</code></pre>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str = \"Hello\";\nstring::size_type len; // int também funciona\nlen = str.length(); // len == 5\nlen = str.size(); // len == 5\n</code></pre>\n<h3>Convertendo para C-style string</h3>\n<ul>\n<li>Retorna o ponteiro para o primeiro caracter do vetor do tipo char da cadeia de caracteres terminada por nulo</li>\n</ul>\n<pre><code class=\"language-C++\">const char* c_str() const;\n</code></pre>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str_cpp=“abcd”;\nchar str_c[20];\n...\nstrcpy(str_c, str_cpp.c_str());\n</code></pre>\n<h3>Insere uma String em Outra</h3>\n<ul>\n<li>Insere uma string em outra em uma posição</li>\n</ul>\n<p>determinada</p>\n<pre><code class=\"language-C++\">string&#x26; insert(size_type pos, const string&#x26; str);\n</code></pre>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str11 = \"abcdefghi\";\nstring str12 = \"0123\";\nstr11.insert (3, str12); // \"abc0123defghi\"\n</code></pre>\n<ul>\n<li>Apaga um Pedaço de uma String</li>\n</ul>\n<pre><code class=\"language-C++\">string&#x26; erase(size_type pos, size_type n);\n</code></pre>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str13 = \"abcdefghi\";\nstr12.erase(5, 3); // \"abcdei\"\n</code></pre>\n<h3>Substitui uma Substring por Outra</h3>\n<ul>\n<li>Apaga uma substring e insere outra no lugar</li>\n</ul>\n<pre><code class=\"language-C++\">string&#x26; replace(size_type pos, size_type n, const string&#x26; str);\n</code></pre>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str14 = \"abcdefghi\";\nstring str15 = \"XYZ\";\nstr14.replace(4, 2, str15); // \"abcdXYZghi\"\n</code></pre>\n<h3>Procura a Ocorrência de uma String em Outra</h3>\n<ul>\n<li>Procura a ocorrência de uma String em outra String iniciando na posição pos</li>\n<li>Retorna a primeira ocorrência</li>\n</ul>\n<pre><code class=\"language-C++\">size_type find(const string&#x26; str, size_type pos);\n</code></pre>\n<p>– Retorna a última ocorrência</p>\n<pre><code class=\"language-C++\">size_type rfind(const string&#x26; str, size_type pos);\n</code></pre>\n<ul>\n<li>Se a string for encontrada, retorna o índice do início da ocorrência; senão, retorna o valor string::npos.</li>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str16 = \"abcdefghi\";\nstring str17 = \"def\";\nstring::size_type pos = str16.find(str17, 0); // retorna 3\n</code></pre>\n<h3>Procura a Ocorrência de um dos Caracteres em uma String</h3>\n<ul>\n<li>Procura a ocorrência de um dos caracteres na string iniciando na posição pos</li>\n<li>Retorna a posição da primeira ocorrência</li>\n</ul>\n<pre><code class=\"language-C++\">size_t find_first_of(const string&#x26; str, size_t pos = 0);\n</code></pre>\n<ul>\n<li>Retorna a última ocorrência</li>\n</ul>\n<pre><code class=\"language-C++\">size_t find_last_of(const string&#x26; str, size_t pos = npos);\n</code></pre>\n<ul>\n<li>Se nenhum caractere for encontrado, retorna o índice da ocorrência;</li>\n</ul>\n<p>senão, retorna o valor string::npos.</p>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">std::string str(\"Um texto vai aqui.\");\nstd::size_t found = str.find_first_of(\"aeiou\"); // retorna 4\n</code></pre>\n<h3>Retorna uma Substring</h3>\n<ul>\n<li>Retorna uma Substring com n caracteres a partir da</li>\n</ul>\n<p>posição pos</p>\n<pre><code class=\"language-C++\">string substr(size_type pos, size_type n);\n</code></pre>\n<ul>\n<li>Exemplo:</li>\n</ul>\n<pre><code class=\"language-C++\">string str18 = \"abcdefghi\"\nstring str19 = str18.substr(6, 2); // \"gh\"\n</code></pre>\n<h3>Operador = (Atribuição)</h3>\n<ul>\n<li>Atribui uma string a outra</li>\n</ul>\n<pre><code class=\"language-C++\">string string_one = \"Hello\";\nstring string_two;\nstring_two = string_one;\n</code></pre>\n<ul>\n<li>Com cadeias literais</li>\n</ul>\n<pre><code class=\"language-C++\">string string_three;\nstring_three = \"Goodbye\";\n</code></pre>\n<ul>\n<li>Com um único caracter</li>\n</ul>\n<pre><code class=\"language-C++\">string string_four;\nchar ch = 'A';\nstring_four = ch;\nstring_four = 'Z';\n</code></pre>\n<h3>Operador + (Concatenação)</h3>\n<ul>\n<li>Concatena duas Strings</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = \"Hello \";\nstring str2 = \"there\";\nstring str3 = str1 + str2; // \"Hello there\"\n</code></pre>\n<ul>\n<li>Uma string com uma constante</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = \"Hello \";\nstring str4 = str1 + \"there\";\n</code></pre>\n<ul>\n<li>Uma string com um caracter único</li>\n</ul>\n<pre><code class=\"language-C++\">string str5 = \"The End\";\nstring str6 = str5 + '!';\n</code></pre>\n<h3>Operador += (Concatena e Atribui)</h3>\n<ul>\n<li>Concatena duas Strings</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = \"Hello \";\nstring str2 = \"there\";\nstr1 += str2; // \"Hello there\"\n</code></pre>\n<ul>\n<li>Uma string com uma constante</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = \"Hello \";\nstr1 += \"there\"; // \"Hello there\"\n</code></pre>\n<ul>\n<li>Uma string com um caractere único</li>\n</ul>\n<pre><code class=\"language-C++\">string str5 = \"The End\";\nstr5 += '!'; // \"The End!\"\n</code></pre>\n<h3>Operadores de Comparação</h3>\n<h4>==, !=, &#x3C;, >, &#x3C;=, >=</h4>\n<ul>\n<li>Compara duas strings</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = “Joao”;\nstring str2 = “Maria”;\nif (st1 > str2) {\n. . .\n</code></pre>\n<ul>\n<li>Uma string e uma cadeia literal</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = “Joao”;\nif (str1 != “Pedro”) {\n. . .\n</code></pre>\n<h3>Operador [ ]</h3>\n<h4>Caractere Indicado por Índice</h4>\n<ul>\n<li>Faz acesso ao caracter indicado pelo índice</li>\n</ul>\n<pre><code class=\"language-C++\">string str10 = \"abcdefghi\";\nchar ch = str10[3]; // 'd'\nstr10[5] = 'X'; // \"abcdeXghi\"\n</code></pre>\n<h3>Operador &#x3C;&#x3C; e >></h3>\n<h4>Entrada e Saída no Modo Texto</h4>\n<ul>\n<li>Escreve a string para o output stream</li>\n</ul>\n<pre><code class=\"language-C++\">string str1 = \"Hello there\";\ncout &#x3C;&#x3C; str1 &#x3C;&#x3C; endl;\n</code></pre>\n<ul>\n<li>Lê uma string a partir do input stream</li>\n</ul>\n<pre><code class=\"language-C++\">string str1;\ncin >> str1;\n</code></pre>"}},"pageContext":{"id":"2c4afec0-9447-5385-aac7-83bf7818c344","frontmatter__slug":"stl-string","__params":{"frontmatter__slug":"stl-string"}}},"staticQueryHashes":["3159585216"],"slicesMap":{}}